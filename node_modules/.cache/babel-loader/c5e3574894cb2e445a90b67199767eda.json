{"ast":null,"code":"var _jsxFileName = \"/Users/choihojun/project3/BEB-04-final-02/client/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [Id, setId] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const user_id = JSON.parse(sessionStorage.getItem(\"user_id\"));\n\n  const onIdHandler = event => {\n    setId(event.currentTarget.value);\n  };\n\n  const onPasswordHandler = event => {\n    setPassword(event.currentTarget.value);\n  };\n\n  useEffect(() => {\n    //로그인 돼 있으면 로그인페이지 진입 못하게\n    if (user_id) {\n      console.log(\"이미 로그인 되었습니다.\");\n      navigate(\"/\");\n    } else {\n      console.log(\"로그인 해 주세요.\");\n    }\n\n    return () => {};\n  }, []);\n\n  const onSubmitHandler = () => {\n    if (Id.length === 0 || Password.length === 0) {\n      alert(\"ID와 비밀번호를 모두 입력해주세요\");\n      return; //return이 있어야 로그인요청으로 더이상 진행 안됨.\n      //없으면 alert띄우고 로그인 진행돼버림.\n    }\n\n    let body = {\n      user_id: Id,\n      user_pass: Password\n    }; //로그인 요청\n\n    axios.request({\n      method: \"POST\",\n      url: \"https://localhost:4000/api/user/login\",\n      data: body,\n      withCredentials: true\n    }).then(res => {\n      const user = res.data.data; //로그인하면 받는 유저 정보\n\n      sessionStorage.setItem(\"user_id\", JSON.stringify(user.user_id));\n      sessionStorage.setItem(\"user_artistname\", JSON.stringify(user.user_artistname)); //sessionStorage를 이용해서 로그인후 받은 data를 세션스토리지에 저장\n      //JSON.stringify화 해야 [object Object] 로 저장 안됨\n\n      const user_id = JSON.parse(sessionStorage.getItem(\"user_id\"));\n      const user_artistname = JSON.parse(sessionStorage.getItem(\"user_artistname\")); // string화 시킨 것을 다시 json화\n      // console.log(user_id);\n      // console.log(user_artistname);\n      //로그인 완료 후 메인으로 가기\n\n      navigate(\"/\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onKeyPress = e => {\n    if (e.key === \"Enter\") {\n      onSubmitHandler();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"id\",\n          value: Id,\n          onChange: onIdHandler,\n          placeholder: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: Password,\n          onChange: onPasswordHandler,\n          placeholder: \"Password\",\n          onKeyPress: onKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: onSubmitHandler,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"8hxXjW3dIiZ5A8c8CxF6OzYbYs4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Login","Id","setId","Password","setPassword","navigate","user_id","JSON","parse","sessionStorage","getItem","onIdHandler","event","currentTarget","value","onPasswordHandler","console","log","onSubmitHandler","length","alert","body","user_pass","request","method","url","data","withCredentials","then","res","user","setItem","stringify","user_artistname","catch","err","onKeyPress","e","key"],"sources":["/Users/choihojun/project3/BEB-04-final-02/client/src/pages/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Login.css\";\n\nfunction Login() {\n  const [Id, setId] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const user_id = JSON.parse(sessionStorage.getItem(\"user_id\"));\n\n  const onIdHandler = (event) => {\n    setId(event.currentTarget.value);\n  };\n\n  const onPasswordHandler = (event) => {\n    setPassword(event.currentTarget.value);\n  };\n\n  useEffect(() => {\n    //로그인 돼 있으면 로그인페이지 진입 못하게\n    if (user_id) {\n      console.log(\"이미 로그인 되었습니다.\");\n      navigate(\"/\");\n    } else {\n      console.log(\"로그인 해 주세요.\");\n    }\n    return () => {};\n  }, []);\n\n  const onSubmitHandler = () => {\n    if (Id.length === 0 || Password.length === 0) {\n      alert(\"ID와 비밀번호를 모두 입력해주세요\");\n      return;\n      //return이 있어야 로그인요청으로 더이상 진행 안됨.\n      //없으면 alert띄우고 로그인 진행돼버림.\n    }\n    let body = {\n      user_id: Id,\n      user_pass: Password,\n    };\n\n    //로그인 요청\n    axios\n      .request({\n        method: \"POST\",\n        url: \"https://localhost:4000/api/user/login\",\n        data: body,\n        withCredentials: true,\n      })\n      .then((res) => {\n        const user = res.data.data; //로그인하면 받는 유저 정보\n\n        sessionStorage.setItem(\"user_id\", JSON.stringify(user.user_id));\n        sessionStorage.setItem(\n          \"user_artistname\",\n          JSON.stringify(user.user_artistname)\n        );\n        //sessionStorage를 이용해서 로그인후 받은 data를 세션스토리지에 저장\n        //JSON.stringify화 해야 [object Object] 로 저장 안됨\n\n        const user_id = JSON.parse(sessionStorage.getItem(\"user_id\"));\n        const user_artistname = JSON.parse(\n          sessionStorage.getItem(\"user_artistname\")\n        );\n        // string화 시킨 것을 다시 json화\n\n        // console.log(user_id);\n        // console.log(user_artistname);\n\n        //로그인 완료 후 메인으로 가기\n        navigate(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const onKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      onSubmitHandler();\n    }\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"form_container\">\n        <div className=\"title\">Login</div>\n        <form className=\"inputs\">\n          <input type=\"id\" value={Id} onChange={onIdHandler} placeholder=\"ID\" />\n          <input\n            type=\"password\"\n            value={Password}\n            onChange={onPasswordHandler}\n            placeholder=\"Password\"\n            onKeyPress={onKeyPress}\n          />\n        </form>\n        <div className=\"submit\">\n          <button type=\"submit\" onClick={onSubmitHandler}>\n            로그인\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM,CAACC,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,EAAD,CAA5B;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMS,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAMQ,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAX,CAAhB;;EAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;IAC7BV,KAAK,CAACU,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAL;EACD,CAFD;;EAIA,MAAMC,iBAAiB,GAAIH,KAAD,IAAW;IACnCR,WAAW,CAACQ,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAX;EACD,CAFD;;EAIAjB,SAAS,CAAC,MAAM;IACd;IACA,IAAIS,OAAJ,EAAa;MACXU,OAAO,CAACC,GAAR,CAAY,eAAZ;MACAZ,QAAQ,CAAC,GAAD,CAAR;IACD,CAHD,MAGO;MACLW,OAAO,CAACC,GAAR,CAAY,YAAZ;IACD;;IACD,OAAO,MAAM,CAAE,CAAf;EACD,CATQ,EASN,EATM,CAAT;;EAWA,MAAMC,eAAe,GAAG,MAAM;IAC5B,IAAIjB,EAAE,CAACkB,MAAH,KAAc,CAAd,IAAmBhB,QAAQ,CAACgB,MAAT,KAAoB,CAA3C,EAA8C;MAC5CC,KAAK,CAAC,qBAAD,CAAL;MACA,OAF4C,CAG5C;MACA;IACD;;IACD,IAAIC,IAAI,GAAG;MACTf,OAAO,EAAEL,EADA;MAETqB,SAAS,EAAEnB;IAFF,CAAX,CAP4B,CAY5B;;IACAJ,KAAK,CACFwB,OADH,CACW;MACPC,MAAM,EAAE,MADD;MAEPC,GAAG,EAAE,uCAFE;MAGPC,IAAI,EAAEL,IAHC;MAIPM,eAAe,EAAE;IAJV,CADX,EAOGC,IAPH,CAOSC,GAAD,IAAS;MACb,MAAMC,IAAI,GAAGD,GAAG,CAACH,IAAJ,CAASA,IAAtB,CADa,CACe;;MAE5BjB,cAAc,CAACsB,OAAf,CAAuB,SAAvB,EAAkCxB,IAAI,CAACyB,SAAL,CAAeF,IAAI,CAACxB,OAApB,CAAlC;MACAG,cAAc,CAACsB,OAAf,CACE,iBADF,EAEExB,IAAI,CAACyB,SAAL,CAAeF,IAAI,CAACG,eAApB,CAFF,EAJa,CAQb;MACA;;MAEA,MAAM3B,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAX,CAAhB;MACA,MAAMuB,eAAe,GAAG1B,IAAI,CAACC,KAAL,CACtBC,cAAc,CAACC,OAAf,CAAuB,iBAAvB,CADsB,CAAxB,CAZa,CAeb;MAEA;MACA;MAEA;;MACAL,QAAQ,CAAC,GAAD,CAAR;IACD,CA7BH,EA8BG6B,KA9BH,CA8BUC,GAAD,IAAS;MACdnB,OAAO,CAACC,GAAR,CAAYkB,GAAZ;IACD,CAhCH;EAiCD,CA9CD;;EAgDA,MAAMC,UAAU,GAAIC,CAAD,IAAO;IACxB,IAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;MACrBpB,eAAe;IAChB;EACF,CAJD;;EAMA,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,uBACE;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAM,SAAS,EAAC,QAAhB;QAAA,wBACE;UAAO,IAAI,EAAC,IAAZ;UAAiB,KAAK,EAAEjB,EAAxB;UAA4B,QAAQ,EAAEU,WAAtC;UAAmD,WAAW,EAAC;QAA/D;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,UADP;UAEE,KAAK,EAAER,QAFT;UAGE,QAAQ,EAAEY,iBAHZ;UAIE,WAAW,EAAC,UAJd;UAKE,UAAU,EAAEqB;QALd;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAYE;QAAK,SAAS,EAAC,QAAf;QAAA,uBACE;UAAQ,IAAI,EAAC,QAAb;UAAsB,OAAO,EAAElB,eAA/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GArGQlB,K;UAGUF,W;;;KAHVE,K;AAuGT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}